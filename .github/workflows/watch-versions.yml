name: Watch Job

on:
  workflow_dispatch:
  schedule:
    - cron: '* * * * 0-6'

permissions:
  contents: write
  issues: write

jobs:
  comment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache last Timeout File
        uses: actions/cache@v3
        with:
          key: versions.timeout
          path: versions.timeout

      - name: "Check Preconditions"
        if: ${{ env.GH_ISSUE == '' || (github.event_name == 'workflow_dispatch' && github.actor != github.repository_owner) }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_ISSUE: ${{ secrets.GH_ISSUE }}
        run: |
          if [[ -z "$GH_ISSUE" ]]; then
              gh issue create --title '[SETUP] Notification' --body '...'
          fi
          echo "Setup will never succeed. Set ENV Variable"
          exit 1

      - name: 'Setup: Install earthly'
        run: "sudo /bin/sh -c 'wget https://github.com/earthly/earthly/releases/latest/download/earthly-linux-amd64 -q -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly'"
      - name: Earthly version
        run: earthly --version

      - name: Setup Git
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "github-action@users.noreply.github.com"

      - name: Update Notification Issue
        # No Cache because it may cache wrongly
        run: |
          earthly --no-cache +ci-download-versions

          BODY=body.md
          state=$(cat versions.state)
          if [ "$state" == "0" ]; then
            echo 'Nothing to change' > $BODY
            gh issue close $GH_ISSUE
          else
            lines=$(cat versions.list)
            echo 'This an auto generated message produced by github actions.' > $BODY
            echo '' >> $BODY
            echo '# Versions' >> $BODY

            for line in $lines; do
              echo "- [ ] " $line >> $BODY
            done

            echo '' >> $BODY
            echo 'Please update the Version specified in Earthfile accordingly' >> $BODY

            gh issue reopen $GH_ISSUE
          fi

          gh issue edit $GH_ISSUE --body-file $BODY

          if [ "$state" != "0" ]; then
            lines=$(cat versions.list)

            for line in $lines; do
              VER_BRANCH=feat-update-${line}
              VER_EXISTS=$(git ls-remote --heads origin ${VER_BRANCH} | wc -l)
              if [ ${VER_EXISTS} -eq 0 ]; then
                git checkout ${GH_SHA}
                git checkout -b ${VER_BRANCH}
                earthly +ci-update-version --GITEA_VERSION_NEXT=${line}
                git add -A
                git commit -m "feat: Update to Version ${line}"
                git push --set-upstream origin ${VER_BRANCH}
    
                gh pr create --title "Create Version ${line}" --body "Automatically created by Github Actions" 
              fi
            done
          fi

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_ISSUE: ${{ secrets.GH_ISSUE }}
          GH_SHA: ${{ github.sha }}
